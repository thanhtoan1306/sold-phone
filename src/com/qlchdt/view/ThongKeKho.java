/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.qlchdt.view;

import com.qlchdt.model.ChiTietHoaDon;
import com.qlchdt.model.SanPham;
import com.qlchdt.service.ChiTietHoaDonService;
import com.qlchdt.service.SanPhamService;
import java.awt.CardLayout;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.CategoryItemRenderer;
import org.jfree.chart.ui.TextAnchor;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author ACER
 */
public class ThongKeKho extends javax.swing.JPanel {
    private ChiTietHoaDonService chiTietHoaDonServ;
    private SanPhamService sanPhamServ;
    private int soLuongSanPhamBan=0;
    private int soLuongSanPham=0;

    public int getSoLuongSanPhamBan() {
        return soLuongSanPhamBan;
    }

    public int getSoLuongSanPham() {
        return soLuongSanPham;
    }
    /**
     * Creates new form ThongKeSanPham
     */
    public ThongKeKho() {
        chiTietHoaDonServ = new ChiTietHoaDonService();
        sanPhamServ = new SanPhamService();
        initComponents();
        this.setDataToChart();
    }
    
    String convertToFullName(String str) {
        switch (str) {
            case "SS": return "samsung".toUpperCase();
            case "OP": return "oppo".toUpperCase();
            case "NO": return "nokia".toUpperCase();
            case "IP": return "iphone".toUpperCase();
        }
        return "Unknown";
    }
    
    DefaultCategoryDataset createDataset() {
        List<ChiTietHoaDon> list_cthd = this.chiTietHoaDonServ.getDscthd();
        List<SanPham> list_sp = this.sanPhamServ.getDssp();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        
        Map<String, List<ChiTietHoaDon>> byHangCTHD = list_cthd.stream().collect(Collectors.groupingBy(ct
                -> ct.getMaSanPham().substring(0, 2)));

        Map<String, List<SanPham>> byHangSP = list_sp.stream().collect(Collectors.groupingBy(sp
                -> sp.getMaHSP()));
        
        for (Map.Entry<String, List<ChiTietHoaDon>> entry : byHangCTHD.entrySet()) {
            String key = entry.getKey();
            List<ChiTietHoaDon> val = entry.getValue();
            List<SanPham> danhSachSP = byHangSP.get(key);
            
            int soLuongBan = 0;
            int soLuong = 0;
            for (ChiTietHoaDon cthd : val) {
                soLuongBan += cthd.getSoLuong();
            }
            
            for (SanPham sp : danhSachSP) {
                soLuong += sp.getSoLuong();
            }
            
            this.soLuongSanPham += soLuong;
            this.soLuongSanPhamBan += soLuongBan;
            dataset.addValue(soLuong, "Sản Phẩm", convertToFullName(key));
            dataset.addValue(soLuongBan, "Sản Phẩm Bán", convertToFullName(key));
            dataset.addValue(soLuong-soLuongBan, "Sản Phẩm Còn Lại", convertToFullName(key));
        }
        return dataset;
    }

    public void setDataToChart() {
        DefaultCategoryDataset dataset = this.createDataset();
        JFreeChart barChart = ChartFactory.createBarChart("Biểu đồ thống kê kho sản phẩm".toUpperCase(), "Hãng Sản Phẩm", "Số Lượng", dataset);

        CategoryItemRenderer renderer = ((CategoryPlot)barChart.getPlot()).getRenderer();
        renderer.setDefaultItemLabelGenerator(new StandardCategoryItemLabelGenerator());
        renderer.setDefaultItemLabelsVisible(true);
        ItemLabelPosition position = new ItemLabelPosition(ItemLabelAnchor.OUTSIDE12, 
                TextAnchor.BASELINE_CENTER);
        renderer.setDefaultPositiveItemLabelPosition(position);
        
        ChartPanel chartPanel = new ChartPanel(barChart);
        //chartPanel.setPreferredSize(new Dimension(800, 600));
        //this.setLayout(new CardLayout());
        this.add(chartPanel);
        this.validate();
        this.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.CardLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
